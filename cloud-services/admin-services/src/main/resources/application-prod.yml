server:
  port: 8888
  context-path: /admin
spring:
  application:
    name: admin-service

#文件上传路径 前缀
fileUpload.prefix : /data/resources/resources

# 单点登录配置    
sso.server : http://www.zlcrm.com.cn/sso

# ====================basis.connection====================
spring.jpa.hibernate.ddl-auto: update
spring.jpa.database: mysql
spring.datasource.url: jdbc:mysql://localhost:3306/boot_cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Hongkong
spring.datasource.username: admin
spring.datasource.password: admin_lii-ZL@2018
spring.datasource.driver-class-name: com.mysql.jdbc.Driver
spring.datasource.type: com.alibaba.druid.pool.DruidDataSource

# 自动部署验证设置:true-开启（默认）、false-关闭
spring.activiti.check-process-definitions: false

# =======================basis.druid======================
basis.druid:
  # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
  initialSize: 10
  #	最小连接池数量
  minIdle: 100
  # 最大连接池数量
  maxActive: 500
  #	配置获取连接等待超时的时间
  maxWait: 10000
  #  配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
  #在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位,一般比minEvictableIdleTimeMillis小
  timeBetweenEvictionRunsMillis: 300000
  #  配置一个连接在池中最小生存的时间，单位是毫秒
  minEvictableIdleTimeMillis: 3000000
  #在每次空闲连接回收器线程(如果有)运行时检查的连接数量,最好和maxActive一致
  numTestsPerEvictionRun: 500
  #  验证连接有效与否的SQL，不同的数据配置不同
  validationQuery: select 1
  #  建议配置为true，不影响性能，并且保证安全性。
  #  申请连接的时候检测，如果空闲时间大于
  #  timeBetweenEvictionRunsMillis，
  #  执行validationQuery检测连接是否有效。
  testWhileIdle: true
  #  申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
  #  这里建议配置为TRUE，防止取到的连接不可用
  testOnBorrow: true
  #  归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
  testOnReturn: false
  #  是否缓存preparedStatement，也就是PSCache。
  #  PSCache对支持游标的数据库性能提升巨大，比如说oracle。
  #  在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。
  #  作者在5.5版本中使用PSCache，通过监控界面发现PSCache有缓存命中率记录，
  #  该应该是支持PSCache。
  #  打开PSCache，并且指定每个连接上PSCache的大小
  poolPreparedStatements: true
  maxPoolPreparedStatementPerConnectionSize: 20
  #  属性类型是字符串，通过别名的方式配置扩展插件，
  #  常用的插件有：
  #  监控统计用的filter:stat
  #  日志用的filter:log4j
  #  防御sql注入的filter:wall
  filters: stat,wall,log4j
  # 访问的用户名
  loginUsername: admin
  # 访问的密码
  loginPassword: admin


# ====================redis====================
redis:
  # Redis服务器地址
  host: 127.0.0.1
  # Redis服务器连接端口
  port: 6379
  # Redis服务器连接密码（默认为空）
  password: lii-ZL@2018
  # 连接超时时间（毫秒）
  timeout: 500
  # Redis数据库索引（默认为0）
  database: 0
  pool:
    # 连接池最大连接数（使用负值表示没有限制）
    max-active: 5000
    # 连接池最大阻塞等待时间（使用负值表示没有限制）
    max-wait: 200
    # 连接池中的最大空闲连接
    max-idle: 200
    # 连接池中的最小空闲连接
    min-idle: 100

# ====================mongodb====================
mongo:
  connection:
    host: 127.0.0.1
    port: 27017
    userName: admin_mongo
    password: admin_mongo
    dbName: cloud_logs